<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Errors_ConfirmDelete.Text" xml:space="preserve">
    <value>Are you sure you wish to delete this record from the database?</value>
  </data>
  <data name="Errors_MenuAddToCurrent" xml:space="preserve">
    <value>Warning: Some items were already in the current menu and could not be added.</value>
  </data>
  <data name="Errors_MenuInvalid" xml:space="preserve">
    <value>Error: Invalid Menu. Menu must have a Name.</value>
  </data>
  <data name="Errors_MenuItemInvalid" xml:space="preserve">
    <value>Error: Invalid Menu Item. Must have a Name, Cost and a Type.</value>
  </data>
  <data name="Errors_MenuRemoveFromCurrent" xml:space="preserve">
    <value>Error: There was nothing selected in the Current Menu to remove.</value>
  </data>
  <data name="Errors_UnsavedChanges.Text" xml:space="preserve">
    <value>You have unsaved changes. Discard changes and continue?</value>
  </data>
  <data name="Generic_Max.PlaceholderText" xml:space="preserve">
    <value>Max</value>
  </data>
  <data name="Generic_Min.PlaceholderText" xml:space="preserve">
    <value>Min</value>
  </data>
  <data name="Generic_SelectAll.Content" xml:space="preserve">
    <value>Select All</value>
  </data>
  <data name="Heading_Initiative.Text" xml:space="preserve">
    <value>Initiative Tracker</value>
  </data>
  <data name="Heading_Menu.Text" xml:space="preserve">
    <value>Menu Editor</value>
  </data>
  <data name="Heading_Results" xml:space="preserve">
    <value>Results: </value>
  </data>
  <data name="Home_Heading" xml:space="preserve">
    <value>Welcome to the DM Suite</value>
  </data>
  <data name="Home_NavigationHint.Text" xml:space="preserve">
    <value>Use the navigation bar on the left to switch between different features.</value>
  </data>
  <data name="Home_Subheading.Text" xml:space="preserve">
    <value>This is a work in progress. To report bugs and issues, please see the Github page.</value>
  </data>
  <data name="Icons.Margin" xml:space="preserve">
    <value>0, 0, 10, 0</value>
  </data>
  <data name="Initiative_AddParticipant.Content" xml:space="preserve">
    <value>New Participant</value>
  </data>
  <data name="Initiative_AddParticipant_Initiative.Text" xml:space="preserve">
    <value>Initiative:</value>
  </data>
  <data name="Initiative_AddParticipant_Name.Text" xml:space="preserve">
    <value>Name:</value>
  </data>
  <data name="Initiative_AddParticipant_NewSession.Content" xml:space="preserve">
    <value>Add to new session?</value>
  </data>
  <data name="Initiative_AddParticipant_Session.Text" xml:space="preserve">
    <value>Session:</value>
  </data>
  <data name="Initiative_Default" xml:space="preserve">
    <value>Default Session</value>
  </data>
  <data name="Initiative_SelectSession.Text" xml:space="preserve">
    <value>Select Session:</value>
  </data>
  <data name="Menu_Add.Text" xml:space="preserve">
    <value>Add Selected Search Row(s)</value>
  </data>
  <data name="Menu_Button_CreateMenu.Text" xml:space="preserve">
    <value>New Menu</value>
  </data>
  <data name="Menu_Button_CreateMenuItem.Text" xml:space="preserve">
    <value>New Menu Item</value>
  </data>
  <data name="Menu_Button_DeleteMenu.Text" xml:space="preserve">
    <value>Delete Menu</value>
  </data>
  <data name="Menu_Button_DeleteMenuItem.Text" xml:space="preserve">
    <value>Delete Item(s)</value>
  </data>
  <data name="Menu_Button_EditMenuItem.Text" xml:space="preserve">
    <value>Edit Item</value>
  </data>
  <data name="Menu_Button_ExportMenu.Text" xml:space="preserve">
    <value>Export File</value>
  </data>
  <data name="Menu_Button_ImportMenu.Text" xml:space="preserve">
    <value>Import File</value>
  </data>
  <data name="Menu_Button_SaveMenu.Text" xml:space="preserve">
    <value>Save to DB</value>
  </data>
  <data name="Menu_Cost" xml:space="preserve">
    <value>Cost</value>
  </data>
  <data name="Menu_Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Menu_Drink.Content" xml:space="preserve">
    <value>Drink</value>
  </data>
  <data name="Menu_Food.Content" xml:space="preserve">
    <value>Food</value>
  </data>
  <data name="Menu_Heading_CurrentMenu.Text" xml:space="preserve">
    <value>Edit Current Menu</value>
  </data>
  <data name="Menu_Heading_SearchItems.Text" xml:space="preserve">
    <value>Search Menu Items</value>
  </data>
  <data name="Menu_Heading_SearchItemsDescription.Text" xml:space="preserve">
    <value>Searching via keyword matches the Name and Description fields.
You can also filter by Cost and Type.</value>
  </data>
  <data name="Menu_Heading_SearchMenus.Text" xml:space="preserve">
    <value>Search Saved Menus</value>
  </data>
  <data name="Menu_Location.Text" xml:space="preserve">
    <value>Location:</value>
  </data>
  <data name="Menu_MaxGold.Text" xml:space="preserve">
    <value>Gold (Max)</value>
  </data>
  <data name="Menu_MinGold.Text" xml:space="preserve">
    <value>Gold (Min)</value>
  </data>
  <data name="Menu_Name.Text" xml:space="preserve">
    <value>Name:</value>
  </data>
  <data name="Menu_NewLocation" xml:space="preserve">
    <value>Unknown Location</value>
  </data>
  <data name="Menu_NewName" xml:space="preserve">
    <value>Untitled New Menu</value>
  </data>
  <data name="Menu_Remove.Text" xml:space="preserve">
    <value>Remove Selected Menu Rows</value>
  </data>
  <data name="Menu_Treat.Content" xml:space="preserve">
    <value>Treat</value>
  </data>
  <data name="Menu_Type.Text" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Message_DatabaseDeleteFailed" xml:space="preserve">
    <value>Deletion failed. View log file for more information.</value>
  </data>
  <data name="Message_DatabaseDeleteSuccessful" xml:space="preserve">
    <value>Deletion was successful!</value>
  </data>
  <data name="Message_DatabaseSaveFailed" xml:space="preserve">
    <value>Save failed. View log file for more information.</value>
  </data>
  <data name="Message_DatabaseSaveSuccessful" xml:space="preserve">
    <value>Save was successful!</value>
  </data>
  <data name="Message_DatabaseUpdateFailed" xml:space="preserve">
    <value>Edit failed. View log file for more information.</value>
  </data>
  <data name="Message_DatabaseUpdateSuccessful" xml:space="preserve">
    <value>Edit was successful!</value>
  </data>
</root>